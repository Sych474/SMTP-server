Autogen Definitions fsm;

method = case;
type   = reentrant;
prefix = server_fsm;

cookie = "void *server";
cookie = "void *data_str";

/* Состояния init, invalid, done в fsn есть по умолчанию */
/* Состояние invalid - используется для отслеживания ошибок */
state  = created, hello, mail_from, rcpt_to, rcpt_to_add, data, quit, timeout; 
event  = accepted, cmd_helo, cmd_ehlo, cmd_mail, cmd_rcpt, cmd_data, cmd_rset, cmd_vrfy, cmd_quit, 
        mail_end, con_lost, timeout, con_close, syntax_error, cmd_error;

transition =
{ tst = created, hello, mail_from, rcpt_to, rcpt_to_add;            tev = cmd_helo;        next = hello;   ttype = helo;      },
{ tst = created, hello, mail_from, rcpt_to, rcpt_to_add;            tev = cmd_ehlo;        next = hello;   ttype = ehlo;      },
{ tst = created, hello, mail_from, rcpt_to, rcpt_to_add;            tev = cmd_rset;        next = hello;   ttype = rset;      },
{ tst = created, hello, mail_from, rcpt_to, rcpt_to_add;            tev = cmd_quit;        next = quit;    ttype = quit;      },
{ tst = created, hello, mail_from, rcpt_to, rcpt_to_add, data;      tev = timeout;         next = timeout; ttype = timeout;   },
{ tst = "*";                                           tev = con_lost;        next = done;    ttype = lost;      },
{ tst = timeout, quit;                                 tev = con_close;       next = done;    ttype = close;     };


transition =
{ tst = init;         tev = accepted;    next = created;   ttype = accepted; };

transition =
{ tst = created;      tev = cmd_vrfy;    next = created;   ttype = vrfy;      },
{ tst = created;      tev = cmd_error;   next = created;   ttype = cmd_error; },
{ tst = created;      tev = syntax_error;   next = created;   ttype = syntax_error; };

transition =
{ tst = hello;        tev = cmd_mail;    next = mail_from; ttype = mail;      },
{ tst = hello;        tev = cmd_vrfy;    next = hello;     ttype = vrfy;      },
{ tst = hello;        tev = cmd_error;   next = hello;   ttype = cmd_error;   },
{ tst = hello;        tev = syntax_error;   next = hello;     ttype = syntax_error; };

transition =
{ tst = mail_from;    tev = cmd_rcpt;       next = rcpt_to;     ttype = rcpt;      },
{ tst = mail_from;    tev = cmd_vrfy;       next = mail_from;   ttype = vrfy;      },
{ tst = mail_from;    tev = cmd_error;      next = mail_from;   ttype = cmd_error; },
{ tst = mail_from;    tev = syntax_error;   next = mail_from;   ttype = syntax_error; };

transition =
{ tst = rcpt_to;      tev = cmd_rcpt;       next = rcpt_to_add;        ttype = rcpt; },
{ tst = rcpt_to;      tev = cmd_vrfy;       next = rcpt_to;            ttype = vrfy; },
{ tst = rcpt_to;      tev = cmd_error;      next = rcpt_to;            ttype = cmd_error; },
{ tst = rcpt_to;      tev = syntax_error;   next = rcpt_to;         ttype = syntax_error; };

transition =
{ tst = rcpt_to_add;      tev = cmd_rcpt;       next = rcpt_to_add;       ttype = rcpt; },
{ tst = rcpt_to_add;      tev = cmd_data;       next = data;              ttype = data; },
{ tst = rcpt_to_add;      tev = cmd_vrfy;       next = rcpt_to_add;       ttype = vrfy; },
{ tst = rcpt_to_add;      tev = cmd_error;      next = rcpt_to_add;       ttype = cmd_error; },
{ tst = rcpt_to_add;      tev = syntax_error;   next = rcpt_to_add;       ttype = syntax_error; };

transition =
{ tst = data;         tev = mail_end;    next = hello;     ttype = mail_received; };